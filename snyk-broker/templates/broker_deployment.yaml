apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.scmType}}-broker"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snyk-broker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "snyk-broker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snyk-broker.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "snyk-broker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ .Values.scmType}}-broker"
          resources:
            limits:
              cpu: {{ .Values.brokerResources.limits.cpu }}
              memory: {{ .Values.brokerResources.limits.memory }}
            requests:
              cpu: {{ .Values.brokerResources.requests.cpu }}
              memory: {{ .Values.brokerResources.requests.memory}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.scmType}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.container.containerPort }}
          {{- if .Values.acceptJsonFile }}
          volumeMounts:
              - name: {{ include "snyk-broker.fullname" . }}-accept-volume
                mountPath: /home/node/private
                readOnly: true
          {{- end }}
          env:
          {{- if eq .Values.scmType "github-com" }}
       # Github
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "github-enterprise" }}
        # Github Enterprise
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: GITHUB
              value: {{ .Values.github }}
            - name: GITHUB_API
              value: {{ .Values.githubApi }}
            - name: GITHUB_GRAPHQL
              value: {{ .Values.githubGraphQl}}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
            - name: GIT_CLIENT_URL
              value: {{ .Values.gitClientUrl}}
          {{- end }}
          {{- if eq .Values.scmType "bitbucket-server" }}
        # Bitbucket
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: BITBUCKET_USERNAME
              value: {{ .Values.bitbucketUsername }}
            - name: BITBUCKET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bitbucketpassword
                  key: bitbucketPassword
            - name: BITBUCKET
              value: {{ .Values.bitbucket }}
            - name: BITBUCKET_API
              value: {{ .Values.bitbucketApi }}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "gitlab" }}
         # Gitlab
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: GITLAB
              value: {{ .Values.gitlab }}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
            - name: GIT_CLIENT_URL
              value: {{ .Values.gitClientUrl}}
          {{- end }}
          {{- if eq .Values.scmType "azure-repos" }}
          # Azure Repos
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: AZURE_REPOS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: AZURE_REPOS_ORG
              value: {{ .Values.azureReposOrg }}
            - name: AZURE_REPOS_HOST
              value: {{ .Values.azureReposHost }}        
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "artifactory" }}
          # Artifactory
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: ARTIFACTORY_URL
              value: {{ .Values.artifactoryUrl }}
          {{- end }}
          {{- if eq .Values.scmType "jira" }}
          # Jira
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: JIRA_USERNAME
              value: {{ .Values.jiraUsername }}
            - name: JIRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jirapassword
                  key: jiraPassword
            - name: JIRA_HOSTNAME
              value: {{ .Values.jiraHostname }}        
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "container-registry-agent" }}
          # Container Registry Agent
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: CR_AGENT_URL
              value: http://cra-service:{{ .Values.deployment.container.crSnykPort | toString }}
            - name: CR_TYPE
              value: {{ .Values.crType }}
            - name: CR_BASE
              value: {{ .Values.crBase }} 
            - name: CR_USERNAME
              value: {{ .Values.crUsername }}  
            - name: CR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: crpassword
                  key: crPassword                      
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
            - name: BROKER_CLIENT_VALIDATION_URL
              value: http://cra-service:{{ .Values.deployment.container.crSnykPort | toString }}/healthcheck
          {{- end }}
          #Logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: LOG_ENABLE_BODY
              value: {{ .Values.logEnableBody | squote }}
         {{- if .Values.caCert }}
            - name: CA_CERT
              value: {{ .Values.caCert }}
         {{- end }}
         {{- if .Values.httpsCert }}
            - name: HTTPS_CERT
              value: {{ .Values.httpsCert }}
         {{- end }}
         {{- if .Values.httpsKey }}
            - name: HTTPS_KEY
              value: {{ .Values.httpsKey }}
         {{- end }}
         #Troubleshooting
        {{- if .Values.tlsRejectUnauthorized  }}
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: {{ .Values.tlsRejectUnauthorized }}
         {{- end }}
         # Mounting Accept.json
         {{- if .Values.accept }}
            - name: ACCEPT
              value: {{ .Values.accept }}
         {{- end }}
         {{- if .Values.acceptJsonFile }}
      volumes:
      - name: {{ include "snyk-broker.fullname" . }}-accept-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-accept-configmap
        {{- end }}

